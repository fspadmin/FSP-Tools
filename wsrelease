#!/bin/bash
#
# Script to push an FSP code release to production. Call format:
#
#   wsrelease [tag-name]
#
# The script:
#   - Takes both sites (FSP & Porcfest) offline
#   - Fetches the master branch from the repository to a local repository
#   - Exports (via git archive) the release tag specified on the command line
#   - Extracts the export into a directory named after the tag
#   - Relinks the website folder to the new release
#   - Brings the sites up again, with drush

# Locations
WORKSPACE=/tmp
WWW_DIR=/var/www
WWW_LINK=www.freestateproject.org
WEBSITE_DIR=$WWW_DIR/$WWW_LINK
FSP_DIR=$WWW_DIR/$WWW_LINK/sites/default
PF_DIR=$WWW_DIR/$WWW_LINK/sites/porcfest.com
RELEASE_TAG=$1
RELEASE_DIR=$WWW_DIR/$RELEASE_TAG
RELEASE_REPO=/var/local/websitesrc

# Web server file owner
WWW_OWNER=webadmin

# Exit if any error occurs
set -e

# Error if release dir already exists
echo "Verifying release directory does not yet exist"
if [ -d "$RELEASE_DIR" ]; then
    echo "Error: Release directory $RELEASE_DIR already exists"
    exit 1
fi

# Function to bring up website
function site_online() {
  trap - INT TERM EXIT
  echo "Bring sites back online"
  cd $FSP_DIR
  drush vset --yes site_offline 0 || \
    { echo "FSP site could not be brought online!"; exit 1; } 
  drush cc all
  cd $PF_DIR
  drush vset --yes site_offline 0 || \
    { echo "Porcfest site could not be brought online!"; exit 1; } 
  drush cc all
}

# Trap errors (set -e generates EXIT) and execute above function to bring sites
# back up
trap site_online INT TERM EXIT

# Refresh the local repository, build the release & extract
echo "Updating local git repository from remote..."
cd $RELEASE_REPO
git pull
echo "Creating deployment archive $WORKSPACE/ws-$RELEASE_TAG.tar..."
git archive $RELEASE_TAG > $WORKSPACE/ws-$RELEASE_TAG.tar
echo "Creating release folder $RELEASE_DIR..."
mkdir $RELEASE_DIR
echo "Extracting deployment archive into $RELEASE_DIR..."
cd $RELEASE_DIR
tar xf $WORKSPACE/ws-$RELEASE_TAG.tar

# Copy the settings file from the current release
#
# TDB: Script to just extract just the passwords and insert them in the new 
#      release's settings files
echo "Copying settings.php files from $WEBSITE_DIR to $RELEASE_DIR..."
cd $WEBSITE_DIR
for FL in `find -L sites -name settings.php`; do \
  cp $FL $RELEASE_DIR/$FL; 
done

# Set ownership and access rights
echo "Setting file ownership to $WWW_OWNER; Set all files to read-only"
chown -R $WWW_OWNER.$WWW_OWNER $RELEASE_DIR
chmod -R ugo-w $RELEASE_DIR

# Testing: Exit for now========================================================
exit

# Set the website maintenance messages, take both sites down & clear caches
echo "Taking sites offline"
cd $FSP_DIR
drush vset --yes site_offline_message \
  "The FSP website is being maintained - we should be back in 5 minutes";
drush vset --yes site_offline 1
drush cc all
cd $PF_DIR
drush vset --yes site_offline_message \
  "The Porcfest website is being maintained - we should be back in 5 minutes";
drush vset --yes site_offline 1
drush cc all

# Link the website to the new release
echo "Linking $WEBSITE_DIR to $RELEASE_DIR..."
cd $WWW_DIR
rm $WWW_LINK
ln -s $RELEASE_TAG $WWW_LINK

# Bring FSP and Porcfest sites back up using drush
trap - INT TERM EXIT
site_online
